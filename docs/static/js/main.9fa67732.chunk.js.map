{"version":3,"sources":["app/config/index.js","app/components/layout/header.js","app/components/layout/footer.js","app/pages/home.js","app/services/MarvelApi.js","app/components/MarvelCharacter.js","app/components/MarvelCharacterList.js","app/components/Comic.js","app/components/ComicsList.js","app/components/loading.js","app/components/specificComic.js","app/components/characterDetail.js","app/services/index.js","app/pages/characters.js","app/pages/comics.js","app/pages/movies.js","app/pages/comicDetail.js","app/pages/characterdetail.js","app/App.js","serviceWorker.js","index.js"],"names":["configMarvelApi","process","Header","className","to","src","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","map","e","index","key","activeClassName","Footer","Home","MARVEL_API_CHARACTERS","MARVEL_API_COMICS","MarvelApi","getCharacters","a","url","fetch","response","json","jsonData","getComics","MarvelCharacter","content","thumbnail","path","extension","name","description","MarvelCharacterList","characters","Comic","title","ComicsList","comics","Loading","disabled","role","aria-hidden","SpecificComic","data","href","onClick","window","history","back","SpecificCharacter","console","log","Characters","useState","setCharacters","useEffect","fetchData","results","Comics","setComics","fetchComics","Movies","ComicDetail","pageID","useParams","comic","setComic","specComic","find","CharacterDetail","character","setCharacter","specCharacter","App","exact","children","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9fa67732.chunk.js","sourcesContent":["export const configMarvelApi = {\r\n  apiKey: process.env.REACT_APP_MARVEL_API_KEY,\r\n  marvelBaseUrl: process.env.REACT_APP_MARVEL_API_URL\r\n};\r\n\r\nexport const logo = process.env.REACT_APP_MARVEL_LOGO;","import React from 'react';\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nimport './header.css';\r\nimport { logo } from '../../config';\r\n\r\nconst Header = () => {\r\n  const navItems = [\"home\", \"comics\", \"movies\", \"characters\"];\r\n  return(\r\n    <header>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <Link to=\"/\" className=\"navbar-brand\" ><img src={logo} alt=\"logo Marvel\"></img></Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            {navItems.map((e, index) => \r\n              <li className=\"nav-item\" key={index}>\r\n                <NavLink to={`/${e}`} className=\"nav-link\" activeClassName=\"active\">{e}</NavLink>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport './footer.css';\r\n\r\nconst Footer = () => {\r\n  return(\r\n    <footer>\r\n      Made by Thibaut De Maerteleire\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst Home = () => {\r\n  return(\r\n    <div className=\"home\">\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import { configMarvelApi } from '../config';\r\n\r\nconst MARVEL_API_CHARACTERS = `${configMarvelApi.marvelBaseUrl}characters?apikey=${configMarvelApi.apiKey}`;\r\nconst MARVEL_API_COMICS = `${configMarvelApi.marvelBaseUrl}comics?apikey=${configMarvelApi.apiKey}`;\r\nconst MARVEL_API_MOVIES = `${configMarvelApi.marvelBaseUrl}movies?apikey=${configMarvelApi.apiKey}`;\r\n\r\nclass MarvelApi {\r\n  static getCharacters = async () => {\r\n    const url = `${MARVEL_API_CHARACTERS}`;\r\n    const response = await fetch(url);\r\n    const jsonData = await response.json();\r\n    return jsonData;\r\n  }\r\n\r\n  static getComics = async () => {\r\n    const url = `${MARVEL_API_COMICS}`;\r\n    const response = await fetch(url);\r\n    const jsonData = await response.json();\r\n    return jsonData;\r\n  }\r\n}\r\n\r\nexport default MarvelApi;","import React, { useEffect } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MarvelCharacter = ({content}) => {\r\n  return(\r\n    <div className=\"col mb-4\">\r\n      <div className=\"card\">\r\n        <img src={content.thumbnail.path+\".\"+content.thumbnail.extension} className=\"card-img-top\" alt={content.name}></img>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{content.name}</h5>\r\n          <p className=\"card-text\">{content.description}</p>\r\n          <Link to={`/characterdetail/${content.id}`} className=\"btn btn-primary\">\r\n            More info\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarvelCharacter;","import React, { useEffect, useState } from 'react';\r\n\r\nimport MarvelApi from '../services/MarvelApi';\r\nimport MarvelCharacter from './MarvelCharacter';\r\n\r\nimport './characterlist.css';\r\n\r\nconst MarvelCharacterList = ({characters}) => {\r\n  return(\r\n    <div className=\"char-list row row-cols-1 row-cols-md-3\">\r\n      {characters.map((e, index) => <MarvelCharacter content={e} key={index} />) }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarvelCharacterList;","import React from 'react';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Comic = ({content}) => {\r\n  return(\r\n    <div className=\"col mb-4\">\r\n      <div className=\"card\">\r\n        <img src={content.thumbnail.path+'.'+content.thumbnail.extension} className=\"card-img-top\" alt=\"...\"></img>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{content.title}</h5>\r\n          <p className=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n          <Link to={`/comicdetail/${content.id}`} className=\"btn btn-primary\">\r\n            Check details\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comic;","import React from 'react';\r\n\r\nimport Comic from './Comic';\r\n\r\nconst ComicsList = ({comics}) => {\r\n  return(\r\n    <div className=\"comics-list row row-cols-1 row-cols-md-3\">\r\n      {comics.map((e) => <Comic content={e} key={e.id} />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComicsList;","import React from 'react';\r\n\r\nimport './loading.css';\r\n\r\nconst Loading = () => {\r\n  return(\r\n    <div className=\"loading\">\r\n      <button className=\"btn btn-primary\" type=\"button\" disabled>\r\n        <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n        &nbsp;&nbsp; Loading...\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './specCom.css';\r\n\r\nconst SpecificComic = ({data}) => {\r\n  const goBack = () => {\r\n    window.history.back()\r\n  };\r\n\r\n  return(\r\n    <div>\r\n      <ol className=\"breadcrumb\">\r\n        <li><Link to=\"/comics\">Comics</Link></li>\r\n        <li className=\"active\">{data.title}</li>\r\n      </ol>\r\n      <div className=\"specificComic jumbotron\">\r\n        <section>\r\n          <img src={data.thumbnail.path+ \".\" +data.thumbnail.extension} alt={data.title}></img>\r\n          <div className=\"comic-spec-text\">\r\n            <h1 className=\"display-4\">{data.title}</h1>\r\n            <hr className=\"my-4\"></hr>\r\n            <p className=\"lead\">{(data.description) ? data.description : \"There is no more info about this mysterious comic.\"}</p>\r\n          </div>\r\n        </section>\r\n        <a className=\"btn btn-primary btn-lg\" href=\"#\" onClick={goBack} role=\"button\">Go back</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecificComic;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './chardetail.css';\r\n\r\nconst SpecificCharacter = ({data}) => {\r\n  console.log(data)\r\n  return(\r\n    <div className='specChar'>\r\n      <ol className=\"breadcrumb\">\r\n        <li><Link to=\"/characters\">Characters</Link></li>\r\n        <li className=\"active\">{data.name}</li>\r\n      </ol>\r\n      <article className=\"detail-card\">\r\n        <img src={`${data.thumbnail.path}.${data.thumbnail.extension}`} alt={data.name} className=\"img-thumbnail\"></img>\r\n        <section className=\"detail-text\">\r\n          <h1>{data.name}</h1>\r\n          <p>{data.description}</p>\r\n        </section>\r\n      </article>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpecificCharacter;","import MarvelApi from './MarvelApi';\r\n\r\nexport default MarvelApi;","import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { MarvelCharacterList, Loading } from '../components';\r\nimport MarvelApi from '../services';\r\n\r\nconst Characters = () => {\r\n\r\n  const [characters, setCharacters] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    const json = await MarvelApi.getCharacters();\r\n    setCharacters(json.data.results);\r\n  };\r\n\r\n  return(\r\n    <div>\r\n      <ol className=\"breadcrumb\">\r\n        <li><Link to=\"/characters\">Characters</Link></li>\r\n      </ol>\r\n      <div className=\"characters\">\r\n        {(characters !== null) ? <MarvelCharacterList characters={characters} /> : <Loading /> }   \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Characters;","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MarvelApi from '../services/MarvelApi';\r\nimport { ComicsList, Loading } from '../components';\r\n\r\nconst Comics = () => {\r\n\r\n  const [comics, setComics] = useState(null);\r\n\r\n  const fetchComics = async () => {\r\n    const json = await MarvelApi.getComics();\r\n    setComics(json.data.results);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    fetchComics();\r\n  }, []);\r\n\r\n  return(\r\n    <div>\r\n      <ol className=\"breadcrumb\">\r\n        <li><Link to=\"/comics\">Comics</Link></li>\r\n      </ol>\r\n      <div className=\"comics\">\r\n        {(comics !== null) ? <ComicsList comics={comics} /> : <Loading />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comics;","import React from 'react';\r\n\r\nconst Movies = () => {\r\n  return(\r\n    <div className=\"movies\">\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;","import React, { useState, useEffect } from 'react';\r\n\r\nimport MarvelApi from '../services';\r\nimport { Loading, SpecificComic } from '../components';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ComicDetail = () => {\r\n  const pageID = useParams();\r\n  console.log(pageID.id)\r\n  const [comic, setComic] = useState(null);\r\n\r\n  const getComics = async () => {\r\n    const json = await MarvelApi.getComics();\r\n    const specComic = json.data.results.find((e) => e.id == pageID.id);\r\n    setComic(specComic);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getComics();\r\n  }, []);\r\n\r\n  return(\r\n    <div className=\"detail-comic\">\r\n      {(comic !== null) ? <SpecificComic data={comic} key={comic} /> : <Loading />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComicDetail;","import React, { useState, useEffect } from 'react';\r\n\r\nimport MarvelApi from '../services';\r\nimport { Loading, SpecificCharacter } from '../components';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst CharacterDetail = () => {\r\n  const pageID = useParams();\r\n  console.log(pageID.id)\r\n  const [character, setCharacter] = useState(null);\r\n  const getCharacters = async () => {\r\n    const json = await MarvelApi.getCharacters();\r\n\r\n    const specCharacter = json.data.results.find((e) => e.id == pageID.id);\r\n    setCharacter(specCharacter);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCharacters();\r\n  }, []);\r\n\r\n  return(\r\n    <div className=\"detail-character\">\r\n      {(character !== null) ? <SpecificCharacter data={character} key={character.id} /> : <Loading />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharacterDetail;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport { Header, Footer } from './components/layout';\nimport { Home, Characters, Comics, Movies, ComicDetail, CharacterDetail } from './pages';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <div className=\"container-fluid\">\n          <Switch>\n            <Route exact path='/movies'>\n              <Movies />\n            </Route>\n            <Route exact path='/comics'>\n              <Comics />\n            </Route>\n            <Route exact path='/comicdetail/:id' children={<ComicDetail />}>\n            </Route>\n            <Route exact path='/characters'>\n              <Characters />\n            </Route>\n            <Route exact path='/characterdetail/:id' children={<CharacterDetail />}>\n            </Route>\n            <Route exact path='/home'>\n              <Home />\n            </Route>\n            <Route>\n              <Redirect to=\"/home\" />\n            </Route>\n          </Switch>\n        </div>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}